apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'project-report'
apply plugin: 'kotlin-android-extensions'


Properties properties = new Properties()
def propertiesFile = project.rootProject.file('local.properties')
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}
def bitriseApiToken = properties.getProperty('bitrise.api.token')

android {
    compileSdkVersion sdk_version
    defaultConfig {
        applicationId "io.stanwood.bitrise"
        minSdkVersion 21
        targetSdkVersion sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        buildConfigField "String", "BITRISE_API_BASE_URL", "\"https://api.bitrise.io/\""
        buildConfigField "int", "DEFAULT_PAGE_SIZE", "10"
        buildConfigField "int", "PAGE_LOAD_THRESHOLD", "2"
        buildConfigField "String", "BITRISE_API_TOKEN", "\"$bitriseApiToken\""
        buildConfigField "long", "DOWNLOAD_STATUS_REFRESH_DELAY", "500L"
    }
    kotlin {
        experimental {
            coroutines 'enable'
        }
    }
    androidExtensions {
        experimental = true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:$retrofit_coroutines_adapter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_logging_interceptor"

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:animated-vector-drawable:$support_version"
    implementation "com.android.support:mediarouter-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Android Architecture components
    implementation "android.arch.lifecycle:extensions:$architecture_components_version"
    implementation "android.arch.paging:runtime:1.0.0-alpha5"
    kapt "android.arch.lifecycle:compiler:$architecture_components_version"

    // Other
    implementation "ru.terrakok.cicerone:cicerone:$cicerone_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
    implementation "joda-time:joda-time:$joda_version"
    implementation "org.koin:koin-android:$koin_version"

    kapt "com.android.databinding:compiler:$android_plugin_version"

//    // Testing
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.1'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
